@using WhiteBears.Models
@using SautinSoft.Document
@using SautinSoft.Document.Drawing;
@using SautinSoft.Document.Tables;
@model DocumentVersionsModel

@{
    ViewBag.Title = "Document Version Comparison";
}
<script>

    var oldScroll = 0;
    var newScroll = 0;
    $(document).ready(function () {
        setDocumentDisplayHeight();
        //Ajax call to download document selected on the left side
        $("#oldDownload").click(function () {
            $.ajax({
                type: "POST",
                url: '@Url.Action("DownloadDocument", "DocumentReview")',
                contentType: "application/json; charset=utf-8",
                dataType: 'json',
                data: '{"id": @Model.id, "ver":' + $("#version1").val() + '}',
                success: function (response) {
                    console.log(response);
                    window.location = '/DocumentReview/Download?fileGuid=' + response.fileGuid
                        + '&filename=' + response.fileName;
                },
                error: function (e) { console.log(e); }
            });

        });

        //Ajax call to download document selected on the right side
        $("#newDownload").click(function(){
            $.ajax({
                type: "POST",
                url: '@Url.Action("DownloadDocument", "DocumentReview")',
                contentType: "application/json; charset=utf-8",
                dataType: 'json',
                data: '{"id": @Model.id, "ver":' + $("#version2").val() + '}',
                success: function (response) {
                    console.log(response);
                    window.location = '/DocumentReview/Download?fileGuid=' + response.fileGuid
                        + '&fileName=' + response.fileName;
                },
                error: function (e) { console.log(e); }
            });

        });

        //Set scroll lock button function
        $("#scrollLock").click(function () {
            if ($("#scrollLock").val() == "Unlocked") {
                $("#scrollLock").val("Locked");
                oldScroll = $("#oldDocument").scrollTop();
                newScroll = $("#newDocument").scrollTop();
                $("#oldDocument").scroll(oldScrolling);
                $("#newDocument").scroll(newScrolling);
            }
            else {
                $("#scrollLock").val("Unlocked");
                $("#oldDocument").off("scroll");
                $("#newDocument").off("scroll");
            }

        });

        //ajax call to start review process
        $("#btnReview").click(function () {
            $.ajax({
                type: "POST",
                url: '@Url.Action("ReviewDocument", "DocumentReview")',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: '{ "id": @Model.id, "ver1":' + $("#version1").val() + ', "ver2":' + $("#version2").val() +'}',
                success: function (data) {
                    console.log(data);
                    $("#oldModdBy").html(data.modifiedBy1);
                    $("#oldTimeStamp").html(data.timeStamp1);
                    $("#newModBy").html(data.modifiedBy2);
                    $("#newTimeStamp").html(data.timeStamp2);
                    displayDocument(data.Doc1, "oldDocument");
                    displayDocument(data.Doc2, "newDocument");
                    if (data.fileSize1 > 1000) {
                        $("#oldFileSize").html((data.fileSize1/1000.00).tofixed(2) + " MB");
                    }
                    else {
                        $("#oldFileSize").html(data.fileSize1 + " KB");
                    }
                    if (data.fileSize1 > 1000) {
                        $("#newFileSize").html((data.fileSize2 / 1000.00).tofixed(2) + " MB");
                    }
                    else {
                        $("#newFileSize").html(data.fileSize2 + " KB");
                    }
                },
                error: function (e) { console.log(e); }
            });
        });

        //function to resize the documents container based on the window size
        $(window).on('resize', function () {
            setDocumentDisplayHeight();
        });
    });

    var newScrolling = function () {
        $("#oldDocument").off("scroll");
        var newPosition = $("#newDocument").scrollTop();
        oldScroll = oldScroll + (newPosition - newScroll);
        $("#oldDocument").scrollTop(oldScroll);
        newScroll = newPosition;
        $("#oldDocument").on("scroll", oldScrolling);
    }

    var oldScrolling = function () {
        $("#newDocument").off("scroll");
        var newPosition = $("#oldDocument").scrollTop();
        newScroll = newScroll + (newPosition - oldScroll);
        $("#newDocument").scrollTop(newScroll);
        oldScroll = newPosition;
        $("#newDocument").on("scroll", newScrolling);
    }

    //function to set document container height
    var setDocumentDisplayHeight = function () {
        var windowHeight = $(window).height();
        var headerPosition = $("#documentHeaderContainer").offset().top;
        var headerHeight = $("#documentHeaderContainer").height();
        var height = windowHeight - (headerPosition + headerHeight + 40);
        console.log("window:" + windowHeight + " header top: " + headerPosition + " header height: " + headerHeight + " height: " + height);
        $("#documentComparisonContainer").attr("style", "height:" + height + "px;clear:both;float:left;min-height:100px;width:100%;");
    }

    

    //function to display reviewed document
    var displayDocument = function (elements, target) {
        var returnString = "";
        console.log(elements);
        $("#" + target).empty();
        for (i = 0; i < elements.length; i++) {
            
            element = searchArray(elements, i);
            if (element.type == "PARAGRAPH") {
                var par = elements[i];
                switch (par.status) {
                    case "o": 
                        returnString += "<p>ID:" + element.id + " " + element.content + "</p>";
                        break;
                    case "n":
                        returnString += "<p style='background-color:rgba(100, 200, 100, 0.8);'>ID:" + element.id + " " + element.content + "</p>";
                        break;
                    case "d":
                        returnString += "<p style='background-color:rgba(200, 100, 100, 0.8);'>ID:" + element.id + " " + element.content + "</p>";
                        break;
                    case "m":
                        returnString += "<p>ID:" + element.id + " ";
                        sentences = par.elements;
                        for (j = 0; j < sentences.length; j++) {
                            sentence = searchArray(sentences, j);
                            switch (sentence.status) {
                                case "m":
                                    returnString += "<span style='background-color:rgba(200, 200, 80, 0.8);'>" + sentence.content + ".</span>";
                                    break;
                                case "o":
                                    returnString += sentence.content + ".";
                                    break;
                            }
                        }
                        returnString += "</p>";
                        break;
                }
                $("#" + target).append(returnString);
                returnString = "";
            }
            else if (element.type == "PICTURE") {
                var style = "height:300px;margin:1px;border:solid 3px;border-color:";
                switch (element.status) {
                    case "n":
                        style += "rgba(100, 200, 100, 0.8);";
                        break;
                    case "m":
                        style += "rgba(200, 200, 80, 0.8);";
                        break;
                    case "d":
                        style += "rgba(200, 100, 100, 0.8);";
                        break;
                    default:
                        style = "height:300px;margin:1px;";
                        break;
                }
                returnString += "<img id='p" + target + element.order + "'/><br/>";
                $("#" + target).append(returnString);
                $('#p' + target + element.order).attr("src", "data:image/" + element.format + ";base64, " + element.content);
                $('#p' + target + element.order).attr("style", style);
                returnString = "";
            }
            else if (element.type == "TABLE") {
                var tableId = "t" + element.order + target;
                $("#" + target).append("<table id='" + tableId + "' style='width:100%;margin:5px 0px 5px 0px;'><tbody>");
                rows = element.elements;
                for (j = 0; j < rows.length; j++) {
                    row = searchArray(rows, j);
                    var rowId = "r" + element.order + row.order + target;
                    $("#" + tableId).append("<tr id='" + rowId + "' style='width:100%;'>");
                    cells = row.elements;
                    for (k = 0; k < cells.length; k++) {
                        cell = searchArray(cells, k);
                        var cellId = "c" + element.order + row.order + cell.order + target;
                        $("#" + rowId).append("<td id='" + cellId + "'>" + cell.content + "</td>");
                        var style = "border:solid 1px;width:" + 100 / cells.length +"%;";
                        switch (cell.status) {
                            case "o":
                                break;
                            case "n":
                                style += "background-color:rgba(100, 200, 100, 0.8);"
                                break;
                            case "d":
                                style += "background-color:rgba(200, 100, 100, 0.8);"
                                break;
                        }
                        $("#" + cellId).attr("style", style);
                    }
                }
            }
        }
        
    }

    //search for specific document elements
    var searchArray = function (elements, order) {
        var element;
        $.each(elements, function (i, v) {
            if (v.order == order) {
                element = v;
            }
        })
        return element;
    }


</script>



<h2 class="header-text" style="margin-left:10px;">@ViewBag.Title</h2>
<div id="documentHeaderContainer" style="height:150px;margin:0px 15px 0px 15px;">
    <div style="width:45%;float:left;">
        @Html.LabelFor(m => m.docList, "Version")
        @Html.DropDownListFor(model => model.docList, new SelectList(Model.docList, "version", "version"), new { id = "version1" })
        <br/>
        <label for="oldModBy" style="display:inline-block;width:100px;clear:both;float:left;">Modified By:</label>
        <p id="oldModBy" style="float:left;"></p>
        <label for="oldTimeStamp" style="display:inline-block;width:100px;clear:both;float:left;">Modified On:</label>
        <p id="oldTimeStamp" style="float:left;"></p>
        <label for="oldFileSize" style="display:inline-block;width:100px;clear:both;float:left;">File size:</label>
        <p id="oldFileSize" style="float:left;"></p>
        <input id="oldDownload" type="button" value="Download" class="btn btn-primary btn-sm" style="display:inline-block;width:100px;clear:both;float:left;" />
    </div>
    <div style="width:10%;float:left;">
        <input id="btnReview" type="button" class="btn btn-primary btn-sm" value="Compare" style="width:50%" /></br>
        <input id="scrollLock" type="button" class="btn btn-primary btn-sm" value="Unlocked" style="width:50%;margin-top:10px;" />
    </div>
    <div style="width:45%;float:left;">
        @Html.LabelFor(m => m.docList, "Version")
        @Html.DropDownListFor(model => model.docList, new SelectList(Model.docList, "version", "version"), new { id = "version2" })
        <br />
        <label for="newModBy" style="display:inline-block;width:100px;clear:both;float:left;">Modified By:</label>
        <p id="newModBy" style="float:left;"></p>
        <label for="newTimeStamp" style="display:inline-block;width:100px;clear:both;float:left;">Modified On:</label>
        <p id="newTimeStamp" style="float:left;"></p>
        <label for="newFileSize" style="display:inline-block;width:100px;clear:both;float:left;">File size:</label>
        <p id="newFileSize" style="float:left;"></p>
        <input id="newDownload" type="button" class="btn btn-primary btn-sm" value="Download" style="display:inline-block;width:100px;clear:both;float:left;" />
    </div>
</div>
<div id="documentComparisonContainer" style="width:100%;min-width:100%;">
    <div id="oldDocument" style="height:inherit;width:48%;margin:1% 1% 1% 15px;clear:both;float:left;overflow-y:scroll">

    </div>
    <div id="newDocument" style="height:inherit;width:48%;margin:1% 0% 1% 1%;float:left;overflow-y:scroll">

    </div>
</div>


