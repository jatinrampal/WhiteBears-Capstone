@using Capstone.Models
@model DashboardModel
@{
    ViewBag.Title = "Dashboard";
}


@Styles.Render("~/Style/Dashboard.css")
<link href="~/Content/bootstrap.css" rel="stylesheet" />
<script src="~/Scripts/jquery-1.10.2.js"></script>

<div id="MainPage">
    <nav id="LeftPanel">
        <div class="LeftPanelBorder" id="UserInfoContainer">
            <div id="UserInfo">
                <img id="profilePic" src="https://image.freepik.com/free-icon/male-user-profile-picture_318-37825.jpg" /><br /><br />
                <label>@Html.DisplayFor(m => m.CurrentUser.FullName)</label><br />
                <label>CEO</label><br />
                <label>@Model.CurrDate.ToString("MM/dd/yyyy")</label>
            </div>
        </div>

        <div class="LeftPanelBorder" id="ProjectListContainer">
            <div id="ProjectList">
                <label>Projects</label> <br />
                @foreach (var project in Model.Projects)
                {
                    <button class="ProjectButtons btn-secondary" onclick="location.href='@Url.Action("Index", "Project")'">@project.Title</button>;
                }
            </div>
        </div>
    </nav>


    <header>
        <div id="headings">
            <h2>Personal Dashboard</h2>
            <h3>Here's an overview of your projects</h3>
        </div>
        <form id="projectselection" class="text-center">
            <span class="padding-5px border border-dark rounded-right rounded-left ">
                <label class="radio-inline">
                    <input type="radio" name="optradio" checked>All
                </label>

                @foreach (var project in Model.Projects) {
                    <label class="radio-inline">
                        <input type="radio" name="optradio" value="@project.Title">@project.Title
                    </label>
                }
            </span>
        </form>
    </header>


    <div id="TasksSection">
        <label>Tasks</label>
        <table id="tasktable" class="table table-hover">
            <tr>
                <th scope="col">Task</th>
                <th scope="col">Priority</th>
                <th scope="col">Date</th>
                <th scope="col">Status</th>
                <th scope="col">Project</th>
            </tr>
            <tbody>
               
                    @foreach (var project in Model.Projects){
                        foreach (var task in project.Tasks){
                             <tr>
                            <td>@task.Title</td>
                            <td>@task.Priority</td>
                            <td>@task.DueDate.ToString("MM/dd/yyyy")</td>
                            <td>@task.Status</td>
                            <td>@project.Title</td>
                                 </tr>
                        }

                }
            </tbody>
        </table>
    </div>

    <div id="TaskOverviewSection">
        <img src="https://www.patternfly.org/pattern-library/data-visualization/pie-chart/img/right-legend-pie-chart.png" />
    </div>
    <div id="PersonalNotesSection">
            <div id="PersonalNotesTable">
                <label>Personal Notes</label>
                <table class="table table-hover">
                    <tr>
                        <th>Date</th>
                        <th>Note</th>
                    </tr>
                    @foreach (var note in Model.CurrentUser.PersonalNotes)
                    {
                        <tr name="PersonalNoteRow">
                            <td>@note.TimeStamp.ToString("MM/dd/yyyy")</td>
                            <td>@note.Information</td>
                        </tr>
                    }
                </table>
            </div>

            <textarea id="PersonalNoteText"></textarea><br />
            <div id="PersonalNotesButtonsContainer" class="btn-group">
                <button type="button" class="btn btn-primary btn-lg disabled" value="modify">Modify</button>
                <button type="button" class="btn btn-success btn-lg" value="add">Add</button>
                <button type="button" class="btn btn-danger btn-lg disabled" value="delete">Delete</button>
            </div>
    </div>
    <div class="ProgressBarContainers">
        <div class="ProgressBarContainer">
            <label>Tasks Completed</label>
            <div class="progress">
                <div class="progress-bar progress-bar-success" role="progressbar" style="width: 70%" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100">70%</div>
            </div>
            <text class="text-large">7/10</text><br />
            <text class="text-medium text-secondary">3 tasks remaining</text>
        </div>

        <div class="ProgressBarContainer">
            <label>Storage Used</label>
            <div class="progress">
                <div class="progress-bar progress-bar-success" role="progressbar" style="width: 10%" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100">10%</div>
            </div>
            <text class="text-large">100/1000 GB</text><br />
            <text class="text-medium text-secondary">900GB remaining</text>
        </div>
    </div>
</div>
<script>

    $(document).ready(function () {
        var clickedRow = null;
        var addButton = $('button[value=add');
        var modifyButton = $('button[value=modify');
        var deleteButton = $('button[value=delete');
        var noteTextArea = $('#PersonalNoteText');

        $('tr[name=PersonalNoteRow]').on('click', function () {
            clickedRow = $(this);

            if (clickedRow.css('background-color') == 'rgb(211, 211, 211)') {
                clickedRow.css('background-color', 'white');

                changeButtonState(addButton, true);
                changeButtonState(modifyButton, false);
                changeButtonState(deleteButton, false);

                noteTextArea.css('display', 'none');
            } else {
                $('#PersonalNotesTable table tr').css('background-color', 'white');
                $('#PersonalNotesTable table tr').removeClass('selected');

                clickedRow.css('background-color', 'lightgrey');
                clickedRow.addClass('selected');

                changeButtonState(addButton, false);
                changeButtonState(modifyButton, true);
                changeButtonState(deleteButton, true);

                noteTextArea.css('display', 'none');
            }
        });

        addButton.on('click', function () {
            if (addButton.text() === "Add") {
                noteTextArea.val('');
                noteTextArea.css('display', 'block');
                addButton.text("Save");
                deleteButton.text("Cancel");
            } else {
                $('#PersonalNotesTable table tr:last').after('<tr><td>' + @Model.CurrDate.ToString("MM/dd/yyyy") +'</td><td>' + noteTextArea.val() + '</td></tr>');
                noteTextArea.val('');
                noteTextArea.css('display', 'none');
                addButton.text("Add");
                deleteButton.text("Delete");
            }
        });

        modifyButton.on('click', function () {
            if (modifyButton.text() === "Modify") {
                noteTextArea.css('display', 'block');
                noteTextArea.val($('tr.selected td:last-child').text());
                modifyButton.text("Save");
                deleteButton.text("Cancel");
            } else {
                $('tr.selected td:last-child').text(noteTextArea.val());
                noteTextArea.val('');
                noteTextArea.css('display', 'none');
                modifyButton.text('Modify');
                deleteButton.text("Delete");
            }
        });

        deleteButton.on('click', function () {
            if (modifyButton.text() === "Delete") {
                alert(clickedRow);
                clickedRow.remove();
            } else {
                $('tr.selected td:last-child').text(noteTextArea.val());
                noteTextArea.val('');
                noteTextArea.css('display', 'none');
                modifyButton.text('Modify');
                deleteButton.text("Delete");
            }
        })

        function changeButtonState(button, state) {
            if(state)
                button.removeClass('disabled');
            else
                button.addClass('disabled')
        }
    })
        /*
        $('input[name=optradio]').on('click', function () {
            var radioValue = $("input[name='optradio']:checked").val();
            alert();
            $('#tasktable tr').each(function (index, value) {
                if ($(value).children(":eq(4)").text() != radioValue) {
                    $(value).hide();
                }
                //alert(radioValue);
            });
        });
    })
    */
</script>